{"ast":null,"code":"import { ethers } from \"ethers\";\nimport CarbonCreditABI from \"./CarbonCreditABI.json\"; // Убедитесь, что путь к ABI верный\n\nconst contractAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\"; // Убедитесь, что это актуальный адрес контракта\n\nexport const getContract = async () => {\n  if (!window.ethereum) {\n    throw new Error(\"MetaMask is not installed!\");\n  }\n  const provider = new ethers.BrowserProvider(window.ethereum);\n  const signer = await provider.getSigner(); // Убедитесь, что используем Signer\n  return new ethers.Contract(contractAddress, CarbonCreditABI, signer);\n};","map":{"version":3,"names":["ethers","CarbonCreditABI","contractAddress","getContract","window","ethereum","Error","provider","BrowserProvider","signer","getSigner","Contract"],"sources":["C:/Users/User/final-exam-project/frontend/src/utils/contract.js"],"sourcesContent":["import { ethers } from \"ethers\";\r\nimport CarbonCreditABI from \"./CarbonCreditABI.json\"; // Убедитесь, что путь к ABI верный\r\n\r\nconst contractAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\"; // Убедитесь, что это актуальный адрес контракта\r\n\r\nexport const getContract = async () => {\r\n    if (!window.ethereum) {\r\n        throw new Error(\"MetaMask is not installed!\");\r\n    }\r\n\r\n    const provider = new ethers.BrowserProvider(window.ethereum);\r\n    const signer = await provider.getSigner(); // Убедитесь, что используем Signer\r\n    return new ethers.Contract(contractAddress, CarbonCreditABI, signer);\r\n};\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,eAAe,MAAM,wBAAwB,CAAC,CAAC;;AAEtD,MAAMC,eAAe,GAAG,4CAA4C,CAAC,CAAC;;AAEtE,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACnC,IAAI,CAACC,MAAM,CAACC,QAAQ,EAAE;IAClB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;EACjD;EAEA,MAAMC,QAAQ,GAAG,IAAIP,MAAM,CAACQ,eAAe,CAACJ,MAAM,CAACC,QAAQ,CAAC;EAC5D,MAAMI,MAAM,GAAG,MAAMF,QAAQ,CAACG,SAAS,CAAC,CAAC,CAAC,CAAC;EAC3C,OAAO,IAAIV,MAAM,CAACW,QAAQ,CAACT,eAAe,EAAED,eAAe,EAAEQ,MAAM,CAAC;AACxE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}